(2) Описание проблемы

Сложные вычислительные системы для компьютерного моделирования в определенной предметной области могут быть построены на базе наборов сторонних пакетов алгоритмов, интегрированных в единое решение.

При этом пакеты имеют различия с точки зрения:
- реализованных в нем алгоритмов и методов
- способов запуска
- точности и скорости вычислений
- набора рассчитываемых величин.

Каждый пакет не позволяет решать все задачи из прикладной области,
на каких-то входных данных один пакет работает лучше, на других хуже.

Для автоматизации построения композитных приложений, решающих стоящие перед конечными пользователями задачи, требуется высокоуровневая семантическая интеграция пакетов, учитывающая совокупность экспертных знаний


(3) Целью данной работы является разработка методов и средств для управления знаниями в таком вычислительном комплексе компьютерного моделирования, а именно:
- разработка метода для поддержки пользователя в системах компьютерного моделирования
- организация знаний
- разработка средств для организации доступа к этим знаниям

В качестве примера будет использована прикладная область квантовой химии, для вычислительного комплекса которой, в данной работе, были применены разработанные методы и средства на практике.


(4) Схему вычислений в общем случае можно представить в следующем виде - в виде сети вычислений,
где на каждом шаге на вход определенному методу передаются данные, на выходе получаются выходные данные, которые могут быть использованы на следующем шаге вычислений и так далее,
пока не получим нужные нам данные.


(5) В качестве примера сети вычислений на слайде приведен небольшой пример для трех задач из области квантовой химии.


(6) Какие сейчас существуют решения поддержки пользователя в системах компьютерного моделирования?
Самое простое и распространенное решение - это поддержка при помощи написания документации.
Это, конечно, необходимое решение, и остальные методы НЕ могут являться полной альтернативой такому решению,
а только лишь дополнением во многом упрощающем жизнь.
Пользователям приходится долго искать в документации нужные параметры для запуска опреленной задачи.
Зачастую документация является неполной, опущены некоторые очень важные детали, о которых знают лишь
эксперты, проработавшие с определенным продуктом долгое время и "набившие шишки".

Другим решением является поддержка пользователя с помощью экспертного дерева ответов-вопросов.
Зачастую дерево вопросов начинается с вопросов, на которые неподготовленный в области пользователь,
не может ответить точно, но ответ на каждом шагу при перемещении по дереву нужно давать обязательно.
Многие деревья начинаюся с вопроса, каким именно программным средством воспользоваться при расчете?

Альтернативным решением является представление знаний в виде семантических сетей, фреймов, формальной логики и онтологий. Эти решения родственные.

В данной работе предлагается подход с использованием онтологий, динамических дополнений к ним и логических правил.


(7) Что же такое онтология?

Это формализация определенной области знаний в виде концептуальной схемы, состоящей из 
- классов или понятий
- Экземпляров этих классов (или индивидов)
- отношений между индивидами и классами
- и атрибутов


(8) В данной работе предлагается использовать следующий подход поддержки пользователей.

Перед работой экспертные знания о возможностях пакетов представить в виде определенной онтологической схемы.

Дальнейшие действия системы поддержки пользователя должно быть представлено в виде 
итеративного уточнения всех параметров вычислений.
На каждой итерации:
- система на основе запросов к онтологии показывает пользователю ранжированный список предполагаемых параметров
- на каждой итерации пользователь уточняет какой-то параметр
- и это знание представляется в онтологическом виде и добавляется к базовой (экспертной) онтологии
- на следующей итерации запросы уже выполняются на расширенной (пользовательской) итерации.
весь процесс продолжается до тех пор, пока пользователь не согласится со всеми парамерами, большинство из
которых проставляются изначально по умолчанию


(9) Предложенный подход реализуется при помощи следующих четырех вещей:
онтологий
 - базовой - содержащей экспертные знания о возможностях выч.комплекса
 - расширенных пользовательскими знаниями о текущей задаче

Динамических онтошений внутри эксперной онтологии

Дополнений пользовательских фактов к базовой онтологии

И мощного языка запросов, пример которого приведен на слайде


(10) В работе предлагает структурировать знания следующим образом,
выделить 4 класса сущностей внутри знаний,
задачи, методы, пакеты и сервисы
таким образом получается, что отношения будут только между соседними классами сущностей,
и выяснения знаний будет идти от задачи - к конкретному компьютеру, на котором запущен определенный пакет.


(11) На этом слайде представлена предлагаемая общая схема онтологических классов,
и типов отношений между индивидами этих классов.

(12) На этом слайде в графическом виде представлен пример в виде онтологических индивидов для
нескольких задач и пакетов из области квантовой химии.

(13) Но при таком онтологическом представлении со статическими отношениями 
НЕ всегда удается описать все знания из прикладной области. 
На след.слайдах будет приведен пример такого случая.
В работе предлагается использователь динамические отношения, которые могут изменяться
в зависимости от входных данных.
Для онтологий существует специальный язык для описание правил SWRL,
правила представляют собой логический вывод между условием и следствием.
На слайде приведен пример такого правила.

(14) Все пользовательские ответы (уточнения параметров вычислений) представляются в виде онтологий,
и дополняются к базовой онтологи. Далее все запросы уже идут к такой расширенной онтологии.

В результате динамические отношения изменяются в зависимости от описанных правил.

(15) В качестве примера на слайде, знание что определенный метод работает (т.е. решает определенную задачу)
только для структур с четным числом атомов,
предствляем в виде правила в экспертной онтологии.

Такой запрос к онтологии (вернуть все пары методов и задач где метод решает задачу)
не вернет описанное выше динамическое отношение.

(16)
Но как только пользователь введет входные данные,
Система поддержки пользователя добавит в пользовательский факт, 
что количество атомов во входных данных 12.

Точно такой же запрос к расширенной онтологии на следующей итерации уже вернет это отношение.
Таким же образом можно менять веса (которые могут задаваться в виде атрибутов) отношений.
Все это упрощает логику системы поддержки пользователя,
когда большинство знаний о прикладной области переносятся из программного кода в базу знаний.

(17)
Далее кратко будет освещено программное средство, с помощью которого был реализован данный подход на практике.
В качестве требований:
- возможность исполнять запросы к онтологии
- дополнять онтологии
и сессионная работа.

В качестве технологий, были выбраны веб-сервисы,
на яве, т.к. были использованы опен-сорсные решения, которые есть только на яве.

Целью были: высокая интеграция, независимость и быстродействие.

(18)
На слайде представлена схема взаимодействия основных компонентов программного средства.
Внешний интерфейс веб-сервиса состоит всего из трех методов,
используются уже готовые решения для парссинга и исполнения запросов к онтологии.

(19) В работе было выполнено чисто технологическое сравнение между
существующим средством pellet, работающим с онтологиями.
Главные преимущества разработанной системы - 
в плане скорости работы и возможности расширения онтологий на лету.

(20) Возможности применения

Основные направления: 
- поддержка пользователей в высокопроизводительных программных комплексах компьютерного моделирования
- систематизация знания экспертов для последующего использования в повседневной работе
- обучение специалистов предметной области за счет представления знаний экспертов при объяснении прохода по онтологиям


(21) Выводы и результаты:
В работе предложен метод поддержки пользователя в системах компьютерного моделирования со сложной системой алгоритмов, методов и параметров

В результате сделаны выводы:

1) Организация знаний на базе онтологий позволяет упростить доступ к экспертным знаниям в программных комплексах со сложной системой алгоритмов, методов, пакетов и параметров их запуска

2) Динамическое дополнение пользовательскими знаниями базовой онтологии с правилами позволяет упростить логику поддержки пользователя

3) Использование мощного языка запросов к онтологиям, позволяет легко изменять логику поведения сложных систем

